from packages.errors.errors import error

class core_errors:
    error_nothing_in_work_stack =               error('warning', 'work stack empty')
    error_nothing_in_return_stack =             error('warning', 'return stack empty')
    error_invalid_instruction =                 error('fatal', 'invalid instruction')
    error_package_dont_exists =                 error('warning', 'package don\'t exists')
    error_definition_dont_exists =              error('warning', 'definition don\'t exists')
    error_native_definition =                   error('warning', 'nothing to see, it is a native definition')
    error_not_a_variable_or_constant =          error('fatal', 'variable or constant expected')
    error_name_already_exists =                 error('error', 'this constant or variable already exists')
    error_name_missing =                        error('fatal', 'name of your variable or constant is missing')
    error_import_name_missing =                 error('fatal', 'name of your package is missing')
    error_def_name_missing =                    error('fatal', 'name of your definition is missing')
    error_def_name_already_exists =             error('fatal', 'name of your definition already exists')
    error_def_end_missing =                     error('fatal', 'end of your definition is missing')
    error_prod_on_2_string_invalid =            error('fatal', 'invalid multiplication operation on 2 strings : you can use + to concat strings')
    error_plus_on_string_and_number_invalid =   error('fatal', 'invalid plus operation between string and number')
    error_integer_expected =                    error('fatal', 'integer only expected')
    error_integer_and_float_expected =          error('fatal', 'integer and float only expected')
    error_strings_invalid =                     error('fatal', 'invalid operation between string')
    error_division_by_zero_invalid =            error('fatal', 'invalid division by zero')
    error_conditional_invalid =                 error('fatal', 'invalid conditional')
    error_loop_invalid =                        error('fatal', 'invalid loop usage')
    error_comment_invalid =                     error('fatal', 'invalid comment')
    error_invalid_update_constant =             error('fatal', 'invalid constant update')
    error_string_invalid =                      error('fatal', 'string malformed')
    error_array_invalid =                       error('fatal', 'array malformed')
    error_not_a_variable =                      error('error', 'variable name expected')
    error_not_a_variable_or_definition =        error('error', 'variable or definition name expected')
    error_definition_end_invalid =              error('error', 'invalid end of definition')
    error_package_already_loaded =              error('warning', 'package already loaded. Type "words" in console to see the dictionary')
    error_leave_only_in_loop =                  error('fatal', 'usable instruction only in loop')
    error_variable_or_definition_name_missing = error('error', 'variable or definition name is missing')
    error_definition_only =                     error('error', 'only definition name expected')
    error_twopoints_invalid =                   error('fatal', 'begin definition not allowed here')
    error_does_invalid =                        error('fatal', 'instruction only usable in definition with create')
    error_usable_instruction =                   error('fatal', 'instruction only usable in definition')
    error_get_cell_on_array_invalid =           error('error', 'not an array')
    error_index_on_array_invalid =              error('error', 'invalid index on array')
    error_condition_invalid =                   error('error', 'invalid break condition')
    error_filename_missing =                    error('fatal', 'file name missing')
    error_no_such_file =                        error('fatal', 'no such file or directory')
    error_invalid_litteral =                    error('error', 'invalid literal for int with base')
    error_basenumber_invalid =                  error('error', 'base number must be between 2 and 36')
    error_instruction_expected =                error('fatal', 'instruction expected')
    error_bad_type =                            error('error', 'bad type use')
    error_index_on_workstack_invalid =          error('error', 'invalid index on working stack')
    error_immediate_only_in_definition =        error('warning', 'immediate instruction only at the end of definition')
    error_defer_action_not_set =                error('fatal', 'deferred action not set')
    error_not_a_defer_action =                  error('fatal', 'not a defer action')
    error_nothing_to_evaluate =                 error('warming', 'nothing to evaluate')
