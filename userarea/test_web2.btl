<?btl
"addcontent" ?def invert if
	: addcontent ( container widgettoadd ADDCONTENT : add widget in a container as a content )
		dup ?var dup ?local or
		if
			@
		then
		"content" reverse cell+ 
	;	
then
"webreset" ?def invert if
	: webreset 
		"html" ?var if forget html then
		"head" ?var if forget head then
		"title" ?var if forget title then
		"body" ?var if forget body then
		"form" ?var if forget form then 
		{ tag : "html" , content : [ ] , attrs : { lang : "fr" } , container : "y" } var html 
		{ tag : "head" , content : [ ] , attrs : { } , container : "y" } var head 
		{ tag : "body" , content : [ ] , attrs : { } , container : "y" } var body 
		html head addcontent
		html body addcontent
		{ tag : "title" , content : [ ] , attrs : { } , container : "y" } var title 
		head title addcontent
		{ tag : "form" , content : [ ] , attrs : { action : "" , method : "post" } , container : "y" } var form
		cls
	;
then
"addattr" ?def invert if
	: addattr ( widgetvarname name value ADDATTR : add an attribute to your widget )
		rot @ "attrs" cell@ cell+
	;
then
"inputwidget" ?def invert if
	: inputwidget ( id value type INPUTWIDGET : create a new input widget )
		{ } local attrs
		"type" swap attrs cell+ drop
		"value" swap attrs cell+ drop
		"id" swap attrs cell+ drop
		{ tag : "input" , content : [ ] , attrs : attrs @ , container : "n" }
	;
then
"divcont" ?def invert if
	: divcont ( id DIVCONT : create a new division container )
		{ } local attrs
		"id" swap attrs cell+ drop
		{ tag : "div" , content : [ ] , attrs : attrs @ , container : "y" }
	;
then
"labelwidget" ?def invert if
	: labelwidget ( label for LABELWIDGET : create a new label widget )
		{ } local attrs
		"for" swap attrs cell+ drop
		local content
		{ tag : "label" , content : [ content @ ] , attrs : attrs @ , container : "y" }
	;
then
"headlink" ?def invert if
	: headlink ( filename HEADLINK : add a css file in head section )
		{ } local attrs
		"href" swap attrs cell+ drop
		"rel" "stylesheet" attrs cell+ drop
		{ tag : "link" , content : [ ] , attrs : attrs @ , container : "n" }
	;
then
"generate" ?def invert if
	defer generate
	( usage : html @ -- )
	:noname
		dup "tag" cell@ local tag
		dup "content" cell@ local content
		dup "attrs" cell@ local attrs
		"container" cell@ local container
		0 local item
		0 local i
		0 local k
		0 local v
		tag @ "html" = if "<!DOCTYPE html>" .cr then
		"<<!0!>" [ tag @ ] format .

		attrs @ cells 0 > 
		if
			attrs @ keys k !
			attrs @ values v !
			k @ cells i
			do
				" <!0!>='<!1!>'" [ k @ i @ cell@ v @ i @ cell@ ] format .
			loop
		then
		container @ "y" =
		if
			">" .cr
			0 i !
			content @ cells i
			do
				content @ i @ cell@ item !
				item @ ?str
				if
					item @ .cr
				else
					item @ generate
				then
			loop
		else
			"/>" .cr
		then
		container @ "y" =
		if
			"</<!0!>>" [ tag @ ] format .cr
		then
	;
	is generate
then

webreset
body form addcontent
title "Ceci est une page test" addcontent
form "action" "http://localhost/pybee/browser.py?file=myaction&path=default" addattr
html "lang" "en" addattr
"content" "css/file.css" headlink head cell+
"content" "Ceci est mon label" "mydiv" labelwidget form cell+
"content" "mydiv" "test" "text" inputwidget form cell+

html @ .cr cr

html @ generate cls
?>