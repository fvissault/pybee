<?btl
"addcontent" ?def invert if
	: addcontent ( container widgettoadd ADDCONTENT : add widget in a container as a content )
		dup ?var dup ?local or
		if
			@
		then
		"content" reverse cell+ 
	;	
then
"webreset" ?def invert if
	: webreset 
		"html" ?var if forget html then
		"head" ?var if forget head then
		"title" ?var if forget title then
		"body" ?var if forget body then
		"form" ?var if forget form then 
		{ tag : "html" , content : [ ] , attrs : { lang : "fr" } , container : "y" } var html 
		{ tag : "head" , content : [ ] , attrs : { } , container : "y" } var head 
		{ tag : "body" , content : [ ] , attrs : { } , container : "y" } var body 
		html head addcontent
		html body addcontent
		{ tag : "title" , content : [ ] , attrs : { } , container : "y" } var title 
		head title addcontent
		{ tag : "form" , content : [ ] , attrs : { action : "" , method : "post" } , container : "y" } var form
		cls
	;
then
"addattr" ?def invert if
	: addattr ( widgetvarname name value ADDATTR : add an attribute to your widget )
		rot @ "attrs" cell@ cell+
	;
then
"field" ?def invert if
	: field ( id value type FIELD : create a new input widget )
		{ } local attrs
		"type" swap attrs cell+ drop
		"value" swap attrs cell+ drop
		"id" swap attrs cell+ drop
		{ tag : "input" , content : [ ] , attrs : attrs @ , container : "n" }
	;
then
"div" ?def invert if
	: div ( id DIV : create a new division container )
		{ } local attrs
		"id" swap attrs cell+ drop
		{ tag : "div" , content : [ ] , attrs : attrs @ , container : "y" }
	;
then
"label" ?def invert if
	: label ( label for LABEL : create a new label widget )
		{ } local attrs
		"for" swap attrs cell+ drop
		local content
		{ tag : "label" , content : [ content @ ] , attrs : attrs @ , container : "y" }
	;
then
"headlink" ?def invert if
	: headlink ( filename HEADLINK : add a css file in head section )
		{ } local attrs
		"href" swap attrs cell+ drop
		"rel" "stylesheet" attrs cell+ drop
		{ tag : "link" , content : [ ] , attrs : attrs @ , container : "n" }
	;
then
"headscriptfile" ?def invert if
	: headscriptfile ( filename HEADSCRIPTFILE : add a js file in head section )
		{ } local attrs
		"src" swap attrs cell+ drop
		{ tag : "script" , content : [ ] , attrs : attrs @ , container : "y" }
	;
then
"img" ?def invert if
	: img ( src IMG : add an image )
		{ } local attrs
		"src" swap attrs cell+ drop
		{ tag : "img" , content : [ ] , attrs : attrs @ , container : "n" }
	;
then
"textarea" ?def invert if
	: textarea ( id TESTAREA : add a textarea )
		{ } local attrs
		"id" swap attrs cell+ drop
		{ tag : "textarea" , content : [ ] , attrs : attrs @ , container : "y" }
	;
then
"br" ?def invert if
	: br ( BR : add a br )
		{ tag : "br" , content : [ ] , attrs : [ ] , container : "n" }
	;
then
"select" ?def invert if
	: select ( id SELECT : add a select )
		{ } local attrs
		"id" swap attrs cell+ drop
		{ tag : "select" , content : [ ] , attrs : attrs @ , container : "y" }
	;
then
"option" ?def invert if
	: option (  selected? value content OPTION : add an option to a select )
		{ } local attrs
		dup "y" =
		if
			"selected" swap attrs cell+
		then
		drop
		"value" swap attrs cell+ drop
		local cont
		{ tag : "option" , content : [ cont @ ] , attrs : attrs @ , container : "y" }
	;
then
"a" ?def invert if
	: a ( href content A : add an anchor )
		{ } local attrs
		"href" swap attrs cell+ drop
		local cont
		{ tag : "a" , content : [ cont @ ] , attrs : attrs @ , container : "y" }
	;
then
"completeselect" ?def invert if
	: completeselect ( optionsarray selectname COMPLETESELECT : add an select with options )
		select local tempselect
		0 local i
		0 local item
		0 local opt
		( faire une boucle sur le tableau d'options )
		dup cells i
		do
			dup i @ cell@ item !
			item @ 2 cell@ item @ 1 cell@ item @ 0 cell@ option opt !
			"content" opt @ tempselect cell+ drop
		loop
		drop
		tempselect @
	;
then
"button" ?def invert if
	: button ( type onclick content BUTTON : add a button )
		{ } local attrs
		"onclick" rot attrs cell+ drop
		"type" rot attrs cell+ drop
		local cont
		{ tag : "button" , content : [ cont @ ] , attrs : attrs @ , container : "y" }
	;
then
"header" ?def invert if
	: header ( HEADER : add an header section )
		{ tag : "header" , content : [ ] , attrs : { } , container : "y" }
	;
then
"footer" ?def invert if
	: footer ( FOOTER : add an footer section )
		{ tag : "footer" , content : [ ] , attrs : { } , container : "y" }
	;
then
"article" ?def invert if
	: article ( ARTICLE : add an article section. An article section can contain others articles )
		{ tag : "article" , content : [ ] , attrs : { } , container : "y" }
	;
then
"style" ?def invert if
	: style ( content STYLE : add a style section )
		local cont
		{ tag : "style" , content : [ cont @ ] , attrs : { } , container : "y" }
	;
then
"paragraph" ?def invert if
	: paragraph ( content PARAGRAPH : add a paragraph )
		local cont
		{ tag : "p" , content : [ cont @ ] , attrs : { } , container : "y" }
	;
then
"maintitle" ?def invert if
	: maintitle ( size content MAINTITLE : add a title h )
		local cont
		local size
		{ tag : "h<!0!>" [ size @ ] format , content : [ cont @ ] , attrs : { } , container : "y" }
	;
then
"span" ?def invert if
	: span ( content SPAN : add a text block )
		local cont
		{ tag : "span" , content : [ cont @ ] , attrs : { } , container : "y" }
	;
then
"strong" ?def invert if
	: strong ( content STRONG : add a bold text )
		local cont
		{ tag : "strong" , content : [ cont @ ] , attrs : { } , container : "y" }
	;
then
"small" ?def invert if
	: small ( content SMALL : add a small text )
		local cont
		{ tag : "small" , content : [ cont @ ] , attrs : { } , container : "y" }
	;
then
"underline" ?def invert if
	: underline ( content UNDERLINE : add a underlined text )
		local cont
		{ tag : "u" , content : [ cont @ ] , attrs : { } , container : "y" }
	;
then
"table" ?def invert if
	: table ( TABLE : add a table )
		{ tag : "table" , content : [ ] , attrs : { } , container : "y" }
	;
then
"tablerow" ?def invert if
	: tablerow ( TABLEROW : add a row in table )
		{ tag : "tr" , content : [ ] , attrs : { } , container : "y" }
	;
then
"tablecell" ?def invert if
	: tablecell ( content TABLECELL : add a cell in a row of table )
		local cont
		{ tag : "td" , content : [ cont @ ] , attrs : { } , container : "y" }
	;
then
"tablehead" ?def invert if
	: tablehead ( content TABLEHEAD : add a cell in a head row of table )
		local cont
		{ tag : "th" , content : [ cont @ ] , attrs : { } , container : "y" }
	;
then
"unorderlist" ?def invert if
	: unorderlist ( UNORDERLIST : add an unordered list )
		{ tag : "ul" , content : [ ] , attrs : { } , container : "y" }
	;
then
"orderlist" ?def invert if
	: orderlist ( ORDERLIST : add an ordered list )
		{ tag : "ol" , content : [ ] , attrs : { } , container : "y" }
	;
then
"listitem" ?def invert if
	: listitem ( content LISTITEM : add a list item )
		local cont
		{ tag : "li" , content : [ cont @ ] , attrs : { } , container : "y" }
	;
then

"generate" ?def invert if
	defer generate
	( usage : html @ -- )
	:noname
		dup "tag" cell@ local tag
		dup "content" cell@ local content
		dup "attrs" cell@ local attrs
		"container" cell@ local container
		0 local item
		0 local i
		0 local k
		0 local v
		tag @ "html" = if "<!DOCTYPE html>" .cr then
		"<<!0!>" [ tag @ ] format .

		attrs @ cells 0 > 
		if
			attrs @ keys k !
			attrs @ values v !
			k @ cells i
			do
				" <!0!>='<!1!>'" [ k @ i @ cell@ v @ i @ cell@ ] format .
			loop
		then
		container @ "y" =
		if
			">" .cr
			0 i !
			content @ cells i
			do
				content @ i @ cell@ item !
				item @ ?str
				if
					item @ .cr
				else
					item @ generate
				then
			loop
		else
			"/>" .cr
		then
		container @ "y" =
		if
			"</<!0!>>" [ tag @ ] format .cr
		then
	;
	is generate
then

webreset
body form addcontent
title "Ceci est une page test" addcontent
form "action" "http://localhost/pybee/browser.py?file=myaction&path=default" addattr
html "lang" "en" addattr
head "css/file.css" headlink addcontent
head "js/file.js" headscriptfile addcontent
head "textarea { background-color: DarkSalmon; color: white; }" style addcontent

"division" div var div1
div1 "Ceci est mon label : " "mydiv" label addcontent
div1 "mydiv" "test" "text" field addcontent
form div1 addcontent

"img/bb.jpeg" img var myimg
form myimg addcontent
myimg "width" "300" addattr

form br addcontent
form "ta" textarea addcontent

[ [ "Volvo" "volvo" "n" ] 
  [ "Saab" "saab" "y" ] 
  [ "Mercedes" "mercedes" "n" ] 
  [ "Audi" "audi" "n" ] ] "cars" completeselect var cars drop
form br addcontent
form cars addcontent

( Voici une autre façon de créer un select
"cars" select var cars
cars "n" "Volvo" "volvo" option addcontent
cars "y" "Saab" "saab" option addcontent
cars "n" "Mercedes" "mercedes" option addcontent
cars "n" "Audi" "audi" option addcontent )

form br addcontent
form "button" "alert("Hello world!")" "Valider" button addcontent

body "yahoo" "http://www.yahoo.fr" a addcontent

body 1 "Test de titre 1" maintitle addcontent
body "Ceci est mon premier paragraph avec Beetle" paragraph addcontent
body 2 "Test de titre 2" maintitle addcontent
body 3 "Test de titre 3" maintitle addcontent
body 4 "Test de titre 4" maintitle addcontent
body 5 "Test de titre 5" maintitle addcontent

html @ .cr cr

html @ generate cls

forget div1
forget myimg
forget cars
?>